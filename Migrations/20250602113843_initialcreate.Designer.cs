// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpilAPI.Data;

#nullable disable

namespace SpilAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602113843_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpilAPI.Models.Bruger", b =>
                {
                    b.Property<int>("BrugerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrugerId"));

                    b.Property<string>("Brugernavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrugerId");

                    b.HasIndex("Brugernavn")
                        .IsUnique();

                    b.ToTable("Brugere");
                });

            modelBuilder.Entity("SpilAPI.Models.Score", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreId"));

                    b.Property<int>("BrugerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dato")
                        .HasColumnType("datetime2");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("SpilId")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("BrugerId");

                    b.HasIndex("SpilId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("SpilAPI.Models.Spil", b =>
                {
                    b.Property<int>("SpilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpilId"));

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpilId");

                    b.ToTable("Spil");

                    b.HasData(
                        new
                        {
                            SpilId = 1,
                            Navn = "Boldspil"
                        },
                        new
                        {
                            SpilId = 2,
                            Navn = "Puslespil"
                        });
                });

            modelBuilder.Entity("SpilAPI.Models.Score", b =>
                {
                    b.HasOne("SpilAPI.Models.Bruger", "Bruger")
                        .WithMany("Scores")
                        .HasForeignKey("BrugerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpilAPI.Models.Spil", "Spil")
                        .WithMany("Scores")
                        .HasForeignKey("SpilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Spil");
                });

            modelBuilder.Entity("SpilAPI.Models.Bruger", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("SpilAPI.Models.Spil", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
